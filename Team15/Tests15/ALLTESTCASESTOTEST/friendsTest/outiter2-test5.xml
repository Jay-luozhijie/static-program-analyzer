<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>friendsTest</name><parsing_time_taken>38.000000</parsing_time_taken>
</info>
<queries>
<query>
<id ReturnTuple="1" Follows="2" Followsstar="1" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" comment="Only such that clause, valid result">1</id><querystr><![CDATA[stmt s1; assign a1; variable v1; procedure pr1; prog_line pl; Select s1 such that Follows(s1, a1) and Follows*(s1, a1) and Follows(s1, a1)]]></querystr>
<stuans>4,8,10,13,16,14</stuans>
<correct>4,8,10,13,14,16</correct>
<time_taken>28.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Follows="2" Followsstar="1" UnnamedVar="1" SuchThat="1" CondNum="6" RelNum="3" comment="Only such that clause, invalid result">2</id><querystr><![CDATA[stmt s1; assign a1; variable v1; procedure pr1; prog_line pl; Select a1 such that Follows(s1, a1) and Follows*(a1, s1) and Follows(s1, a1)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>20.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="5" RelNum="2" comment="Only such that clause, variable appears to the left and right of assignment operator">3</id><querystr><![CDATA[stmt s1; while w1; variable v1; procedure pr1; prog_line pl; Select s1 such that Uses(s1, v1) and Modifies(s1, v1)]]></querystr>
<stuans>3,6,8,11,7,9,10,13,15</stuans>
<correct>3,6,7,8,9,10,11,13,15</correct>
<time_taken>27.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="1" Uses="1" SuchThat="1" CondNum="5" RelNum="2" comment="Only such that clause, variable appears to the left and right of assignment operator">4</id><querystr><![CDATA[stmt s1; while w1; variable v1; procedure pr1; prog_line pl; Select v1 such that Modifies(s1, v1) and Uses(s1, v1)]]></querystr>
<stuans>i,y,v,z,x</stuans>
<correct>x,i,z,v,y</correct>
<time_taken>11.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="3" Pattern="1" CondNum="5" RelNum="0" comment="Only Pattern clause, valid">5</id><querystr><![CDATA[stmt s1; assign a1; variable v1; procedure pr1; prog_line pl; Select a1 pattern a1(v1, _) and a1(v1, _"i"_)]]></querystr>
<stuans>13,9</stuans>
<correct>9,13</correct>
<time_taken>17.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" comment="Only Pattern clause, invalid because multiple exact matches">6</id><querystr><![CDATA[stmt s1; assign a1; variable v1; procedure pr1; prog_line pl; Select a1 pattern a1(v1, "x") and a1(v1, "i")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>9.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="1" Pattern="1" CondNum="3" RelNum="0" comment="Only Pattern clause, valid because multiple partial matches">7</id><querystr><![CDATA[stmt s1; assign a1; variable v1; procedure pr1; prog_line pl; Select a1 pattern a1(v1, "x") and a1(v1, "i")]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>20.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="3" Pattern="1" CondNum="5" RelNum="0" comment="select while cluase, duplicated select">8</id><querystr><![CDATA[stmt s1; while w1; variable v1; procedure pr1; prog_line pl; Select w1 pattern w1(v1, _) and w1(v1, _)]]></querystr>
<stuans>6</stuans>
<correct>6</correct>
<time_taken>19.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="5" Pattern="2" CondNum="8" RelNum="0" comment="select if clause, same control variable duplicated">9</id><querystr><![CDATA[stmt s1; if if1; variable v1; procedure pr1; prog_line pl; Select if1 pattern if1(v1, _, _) pattern if1(v1, _, _)]]></querystr>
<stuans>10</stuans>
<correct>10</correct>
<time_taken>22.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="2" Uses="1" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" comment="Mix uses and ass pattern">10</id><querystr><![CDATA[stmt s1; assign a1; if if1; variable v1; procedure pr1; prog_line pl; Select a1 such that Uses(a1, v1) pattern a1(v1, _"i"_)]]></querystr>
<stuans>9,13</stuans>
<correct>9,13</correct>
<time_taken>17.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Modifies="1" UnnamedVar="2" Pattern="2" SuchThat="1" CondNum="7" RelNum="1" comment="Mix: pattern and modifies">11</id><querystr><![CDATA[stmt s1; assign a1; if if1; variable v1; procedure pr1; Select a1 pattern a1(v1, _"i"_) such that Modifies(a1, v1) pattern a1(v1, _"i"_)]]></querystr>
<stuans>13,9</stuans>
<correct>9,13</correct>
<time_taken>29.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="2" Uses="1" Pattern="1" SuchThat="1" CondNum="6" RelNum="1" comment="Mix while and uses as boolean, returns all assignments">12</id><querystr><![CDATA[stmt s1; assign a1; while w1; if if1; variable v1; procedure pr1; prog_line pl; Select a1 pattern w1(v1, _) such that Uses(w1, v1)]]></querystr>
<stuans>12,4,13,14,5,7,9,11,15,16,17</stuans>
<correct>4,5,7,9,11,12,13,14,15,16,17</correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" UnnamedVar="4" Uses="1" Pattern="2" SuchThat="1" CondNum="9" RelNum="1" comment="Mix with non double present">13</id><querystr><![CDATA[stmt s1; assign a1, if if1; variable v1; procedure pr1; prog_line pl; Select a1 such that Uses(a1, v1) pattern a1(v1, _"i"_) and pattern if1(v1, _, _)]]></querystr>
<stuans></stuans>
<correct></correct>
<time_taken>23.000000</time_taken>
<passed/>
</query>
</queries>
</test_results>
