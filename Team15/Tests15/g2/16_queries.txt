// Parent(_,_)
stmt s;
Select s such that Parent(_,_)
1, 2, 3, 4, 5, 6, 7, 8,
5000
// Parent(_, synonym)
variable v; print pr;
Select v such that Parent(_,pr)
x,y,z,s,f
5000
// Parent(_, int)
read r;
Select r such that Parent(_,8)
none
5000
// Parent(synonym, _)
if i;
Select i such that Parent(i,_)
2,5
5000
// Parent(synonym, synonym)
if i; read r;
Select i such that Parent(i,r)
none
5000
// Parent(synonym, int)
if i; constant c;
Select c such that Parent(i,7)
3,2,4,6
5000
// Parent(int, _)
while w;
Select w such that Parent(2,_)
none
5000
// Parent(int, synonym)
assign a;
Select a such that Parent(2,a)
3
5000
// Parent(int, int)
assign a;
Select a such that Parent(2,4)
1,3,6
5000
// ParentStar(_,_)
assign a;
Select a such that Parent*(_,_)
1,3,6
5000
// ParentStar(_, synonym)
read re;
Select re such that Parent*(_,re)
none
5000
// ParentStar(_, int)
print p;
Select p such that Parent*(_,7)
4,7
5000
// ParentStar(synonym, _)
stmt s;
Select s such that Parent*(_,5)
1,2,3,4,5,6,7,8
5000
// ParentStar(synonym, synonym)
if ifs; assign a;
Select a such that Parent*(ifs,a)
3,6
5000
// ParentStar(synonym, int)
while w;
Select w such that Parent*(w,14)
none
5000
// ParentStar(int, _)
assign a;
Select a such that Parent*(2,a)
3,6
5000
// ParentStar(int, synonym)
read re;
Select re such that Parent*(2,re)
none
5000
// ParentStar(int, int)
if ifs;
Select ifs such that Parent*(2, 8)
none
5000
// Parent(_,_) + Pattern
print p; variable v; assign a;
Select p such that Parent(_,_) pattern a(_,_)
4,7
5000
// Parent(_,_) + Pattern
assign a; variable v;
Select a such that Parent(_,_) pattern a(_,_"b"_)
none
5000
// Parent(_,_) + Pattern
assign a; while w;
Select w such that Parent(_,_) pattern a(_,_"w"_)
none
5000
// Parent(_,_) + Pattern
assign a; variable v; while w;
Select v such that Parent(_,_) pattern a(v,_)
x,y
5000
// Parent(_,_) + Pattern
assign a; variable v; while w;
Select v such that Parent(_,_) pattern a(v,_"x"_)
y
5000
// Parent(_,_) + Pattern
assign a; variable v; while w;
Select v such that Parent(_,_) pattern a("x",_)
x,y,z,s,f
5000
// Parent(_,_) + Pattern
assign a; variable v; while w;
Select a such that Parent(_,_) pattern a("x",_"c"_)
none
5000
// Parent(_,syn) + Pattern
print p; variable v; assign a; read r;
Select p such that Parent(_,r) pattern a(_,_)
none
5000
// Parent(_,syn) + Pattern
assign a; while w; stmt s;
Select s such that Parent(_,s) pattern a(_,_"w"_)
none
5000
// Parent(_,syn) + Pattern
assign a; variable v; while w; if ifs;
Select ifs such that Parent(_,ifs) pattern a(v,_)
5
5000
// Parent(_,syn) + Pattern
assign a; variable v; while w;
Select a such that Parent(_,a) pattern a(v,_"x"_)
3
5000
// Parent(_,syn) + Pattern
assign a; variable v; while w; print pri;
Select v such that Parent(_,pri) pattern a("x",_)
x,y,z,s,f
5000
// Parent(_,syn) + Pattern
assign a; variable v; while w; constant c;
Select a such that Parent(_,a) pattern a("x",_"c"_)
none
5000
// Parent(_,int) + Pattern
print p; variable v; assign a; read r;
Select p such that Parent(_,4) pattern a(_,_)
4,7
5000
// Parent(_,int) + Pattern
assign a; while w; stmt s;
Select s such that Parent(_,6) pattern a(_,_"w"_)
none
5000
// Parent(_,int) + Pattern
assign a; variable v; while w; if ifs
Select ifs such that Parent(_,1) pattern a(v,_)
none
5000
// Parent(_,int) + Pattern
assign a; variable v; while w;
Select a such that Parent(_,1) pattern a(v,_"x"_)
none
5000
// Parent(_,int) + Pattern
assign a; variable v; while w; print pri;
Select v such that Parent(_,8) pattern a("x",_)
none
5000
// Parent(_,int) + Pattern
assign a; variable v; while w; constant c;
Select a such that Parent(_,5) pattern a("x",_"c"_)
none
5000
// Parent(syn,_) + Pattern
print p; variable v; assign a; read r;
Select a such that Parent(a,_) pattern a(_,_)
none
5000
// Parent(syn,_) + Pattern
assign a; while w; stmt s;
Select s such that Parent(s,_) pattern a(_,_"w"_)
none
5000
// Parent(syn,_) + Pattern
assign a; variable v; while w; if ifs;
Select ifs such that Parent(ifs,_) pattern a(v,_)
2,5
5000
// Parent(syn,_) + Pattern
assign a; variable v; while w; procedure p;
Select p such that Parent(w,_) pattern a(v,_"x"_)
none
5000
// Parent(syn,_) + Pattern
assign a; variable v; while w; read r;
Select r such that Parent(r,_) pattern a("x",_)
none
5000
// Parent(syn,_) + Pattern
assign a; variable v; while w; constant c;
Select c such that Parent(w,_) pattern a("x",_"c"_)
none
5000
// Parent(syn,syn) + Pattern
print p; variable v; assign a; read r;
Select a such that Parent(a,p) pattern a(_,_)
none
5000
// Parent(syn,syn) + Pattern
assign a; while w; stmt s;
Select s such that Parent(s,w) pattern a(_,_"w"_)
none
5000
// Parent(syn,syn) + Pattern
assign a; variable v; while w; if ifs;
Select ifs such that Parent(ifs,a) pattern a(v,_)
2,5
5000
// Parent(syn,syn) + Pattern
assign a; variable v; while w; procedure p;
Select a such that Parent(a,s) pattern a(v,_"x"_)
none
5000
// Parent(syn,syn) + Pattern
assign a; variable v; while w; read r; read r2;
Select r2 such that Parent(r,r2) pattern a("x",_)
none
5000
// Parent(syn,syn) + Pattern
assign a; variable v; while w; constant c; stmt s;
Select a such that Parent(s,a) pattern a("x",_"c"_)
none
5000
// ParentStar(_,_) + Pattern
assign a;
Select a such that Parent*(_,_) pattern a(_,_)
1,3,6
5000
// ParentStar(_, synonym) + Pattern
read re; assign a;
Select re such that Parent*(_,re) pattern a(_,_"b"_)
none
5000
// ParentStar(_, int) + Pattern
print p; assign a;
Select p such that Parent*(_,7) pattern a(_,_"w"_)
none
5000
// ParentStar(synonym, _) + Pattern
stmt s; assign a; variable v;
Select s such that Parent*(_,5) pattern a(v,_)
1,2,3,4,5,6,7,8
5000
// ParentStar(synonym, synonym) + Pattern
if ifs; assign a; variable v;
Select a such that Parent*(ifs,a) pattern a(v,_"x"_)
3
5000
// ParentStar(synonym, int) + Pattern
while w;  assign a;
Select w such that Parent*(w,14) pattern a("x",_)
none
5000
// ParentStar(int, _) + Pattern
assign a;
Select a such that Parent*(2,a) pattern a("x",_"c"_)
none
5000
// ParentStar(int, synonym) + Pattern
read re; assign a;
Select re such that Parent*(2,re) pattern a(_,_)
none
5000
// ParentStar(int, int) + Pattern
if ifs; assign a; variable v;
Select ifs such that Parent*(2, 8) pattern a(v,_"x"_)
none
5000

// Parent + ifs pattern
stmt s, s1; assign a; call c;  if ifs;
Select ifs such that Parent*(ifs,_) pattern ifs("x",_,_)
2
5000
// Parent + with
stmt s, s1; assign a; call c;if ifs;
Select s such that Parent(s,_) with s1.stmt# = s.stmt#
2,5
5000
// Parent + with
stmt s, s1; assign a; if ifs;
Select ifs such that Parent*(ifs,_) with ifs.stmt# = s.stmt#
2,5
5000
// Parent + with
stmt s, s1; assign a; if ifs; variable var;
Select <ifs, var> such that Parent*(ifs,_) with ifs.stmt# = s.stmt#
2 x,2 y,2 z,2 s,2 f,5 x,5 y,5 z,5 s,5 f
5000
// Parent + with
stmt s, s1; assign a; if ifs; print p;
Select <p.varName, ifs> such that Parent*(ifs,p) with ifs.stmt# = s.stmt#
s 2,s 5,z 2
5000