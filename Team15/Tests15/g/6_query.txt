//Boolean
stmt s;
Select BOOLEAN
TRUE
5000
// Boolean for Follows(_,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,_)
TRUE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,_)
TRUE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,_)
TRUE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,_)
FALSE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,_)
TRUE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(ifs,_)
FALSE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,_)
TRUE
5000
// Boolean for Follows(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,_)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,s)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,p)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,r)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,w)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,ifs)
FALSE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,c)
TRUE
5000
// Boolean for Follows(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,a)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,s1)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,a)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,w)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,p)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,r)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(s,ifs)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,s)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,p)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,r)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,w)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,c)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(a,a1)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,a)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w, w1; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,w1)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,s)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,p)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,r)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(w,c)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,r)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,s)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,p)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,a)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(c,w)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,s)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,a)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,w)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,c)
TRUE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,r)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p,p1; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(p,p1)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,s)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,a)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,w)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r,r1; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,r1)
FALSE
5000
// Boolean for Follows(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(r,c)
FALSE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(1,_)
TRUE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(2,_)
TRUE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(5,_)
FALSE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(7,_)
FALSE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(11,_)
FALSE
5000
// Boolean for Follows(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(14,_)
FALSE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,1)
FALSE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,2)
TRUE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,5)
TRUE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,7)
TRUE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,8)
FALSE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,11)
TRUE
5000
// Boolean for Follows(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(_,14)
TRUE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(1,14)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(2,3)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(5,6)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(2,6)
TRUE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(4,6)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(7,8)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(6,8)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(12,14)
FALSE
5000
// Boolean for Follows(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows(13,14)
TRUE
5000
// Boolean for Follows*(_,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,_)
TRUE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,_)
TRUE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,_)
TRUE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,_)
FALSE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,_)
TRUE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(ifs,_)
FALSE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,_)
TRUE
5000
// Boolean for Follows*(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,_)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,s)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,p)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,r)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,w)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,ifs)
FALSE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,c)
TRUE
5000
// Boolean for Follows*(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,a)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,s1)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,a)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,w)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,p)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,r)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(s,ifs)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,s)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,p)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,r)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,w)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,c)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(a,a1)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,a)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w, w1; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,w1)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,s)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,p)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,r)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(w,c)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,r)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,s)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,p)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,a)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(c,w)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,s)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,a)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,w)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,c)
TRUE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,r)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p,p1; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(p,p1)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,s)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,a)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,w)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r,r1; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,r1)
FALSE
5000
// Boolean for Follows*(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(r,c)
FALSE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(1,_)
TRUE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(2,_)
TRUE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(5,_)
FALSE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(7,_)
FALSE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(11,_)
FALSE
5000
// Boolean for Follows*(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(14,_)
FALSE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,1)
FALSE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,2)
TRUE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,5)
TRUE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,7)
TRUE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,8)
FALSE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,11)
TRUE
5000
// Boolean for Follows*(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(_,14)
TRUE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(1,14)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(2,3)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(5,6)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(2,6)
TRUE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(4,6)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(7,8)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(6,8)
FALSE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(12,14)
TRUE
5000
// Boolean for Follows*(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Follows*(13,14)
TRUE
5000
// Boolean for Parent(_,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,_)
TRUE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,_)
TRUE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,_)
FALSE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,_)
FALSE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,_)
FALSE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,_)
TRUE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(ifs,_)
FALSE
5000
// Boolean for Parent(syn,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,_)
FALSE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,s)
TRUE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,a)
TRUE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,p)
FALSE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,p)
FALSE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,r)
FALSE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,w)
FALSE
5000
// Boolean for Parent(_,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,c)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,s1)
TRUE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,a)
TRUE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,w)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,p)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,r)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(s,ifs)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,s)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,p)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,r)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,w)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,c)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(a,a1)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,a)
TRUE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w, w1; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,w1)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,s)
TRUE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,p)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,r)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(w,c)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,r)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,s)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,p)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,a)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(c,w)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,s)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,a)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,w)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,c)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,r)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p,p1; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(p,p1)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,s)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,a)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,w)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r,r1; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,r1)
FALSE
5000
// Boolean for Parent(syn,syn)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(r,c)
FALSE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(1,_)
FALSE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(2,_)
TRUE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(5,_)
FALSE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(7,_)
FALSE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(11,_)
FALSE
5000
// Boolean for Parent(stmtNo,_)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(14,_)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,1)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,2)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,5)
TRUE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,7)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,8)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,11)
FALSE
5000
// Boolean for Parent(_,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(_,14)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(1,14)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(2,3)
TRUE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(5,6)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(2,6)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(4,6)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(1,7)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(7,8)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(6,8)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(8,11)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(12,14)
FALSE
5000
// Boolean for Parent(stmtNo,stmtNo)
stmt s, s1; print p; read r; while w; if ifs; call c; assign a, a1; variable v, v1; constant const;
Select BOOLEAN such that Parent(13,14)
FALSE
5000
// Uses(synonym, _)
stmt s;
Select BOOLEAN such that Uses(s,_)
TRUE
5000
// Uses(synonym, _)
print pr;
Select BOOLEAN such that Uses(pr,_)
TRUE
5000
// Uses(synonym, _)
assign a;
Select BOOLEAN such that Uses(a,_)
TRUE
5000
// Uses(synonym, _)
while w;
Select BOOLEAN such that Uses(w,_)
TRUE
5000
// Uses(synonym, _)
if ifs;
Select BOOLEAN such that Uses(ifs,_)
FALSE
5000
// Uses(synonym, _)
call c;
Select BOOLEAN such that Uses(c,_)
TRUE
5000
// Uses(synonym, _)
procedure p;
Select BOOLEAN such that Uses(p,_)
TRUE
5000
// Uses(syn,_)
constant const;
Select BOOLEAN such that Uses(const,_)
FALSE
5000
// Uses(synonym, v)
stmt s; variable v;
Select BOOLEAN such that Uses(s,v)
TRUE
5000
// Uses(synonym, v)
print pr; variable v;
Select BOOLEAN such that Uses(pr,v)
TRUE
5000
// Uses(synonym, v)
assign a; variable v;
Select BOOLEAN such that Uses(a,v)
TRUE
5000
// Uses(synonym, v)
while w; variable v;
Select BOOLEAN such that Uses(w,v)
TRUE
5000
// Uses(synonym, v)
if ifs; variable v;
Select BOOLEAN such that Uses(ifs,v)
FALSE
5000
// Uses(synonym, v)
call c; variable v;
Select BOOLEAN such that Uses(c,v)
TRUE
5000
// Uses(synonym, v)
procedure p; variable v;
Select BOOLEAN such that Uses(p,v)
TRUE
5000
// Uses(syn,v)
constant const; variable v;
Select BOOLEAN such that Uses(const,v)
FALSE
5000
// Uses (stmtNo,_)
call c; assign a;
Select BOOLEAN such that Uses(5,_)
TRUE
5000
// Uses (stmtNo,_)
stmt s; assign a;
Select BOOLEAN such that Uses(7,_)
FALSE
5000
// Uses (stmtNo,_)
print pr; assign a;
Select BOOLEAN such that Uses(10,_)
TRUE
5000
// Uses (stmtNo,_)
constant c; assign a;
Select BOOLEAN such that Uses(20,_)
FALSE
5000
// Uses (stmtNo,_)
stmt s; assign a;
Select BOOLEAN such that Uses(999,_)
FALSE
5000
// Uses (stmtNo,syn)
constant c; assign a; variable v;
Select BOOLEAN such that Uses(5,v)
TRUE
5000
// Uses (stmtNo,syn)
stmt s; assign a; variable v;
Select BOOLEAN such that Uses(8,v)
FALSE
5000
// Uses (stmtNo,syn)
print pr; assign a; variable v;
Select BOOLEAN such that Uses(10,v)
TRUE
5000
// Uses (stmtNo,syn)
print pr; assign a; variable v;
Select BOOLEAN such that Uses(999,v)
FALSE
5000
// Uses(synonym, IDENT)
stmt s; variable v;
Select BOOLEAN such that Uses(s,"b")
TRUE
5000
// Uses(synonym, IDENT)
stmt s; print pr; variable v;
Select BOOLEAN such that Uses(pr,"A")
TRUE
5000
// Uses(synonym, IDENT)
stmt s; assign a; variable v;
Select BOOLEAN such that Uses(a,"b")
TRUE
5000
// Uses(synonym, IDENT)
stmt s; while w; variable v;
Select BOOLEAN such that Uses(w,"x")
TRUE
5000
// Uses(synonym, IDENT)
stmt s; if ifs; variable v;
Select BOOLEAN such that Uses(ifs,"a")
FALSE
5000
// Uses(synonym, IDENT)
stmt s; call c; variable v;
Select BOOLEAN such that Uses(c,"B")
TRUE
5000
// Uses(synonym, IDENT)
stmt s; procedure p; variable v;
Select BOOLEAN such that Uses(p,"x")
TRUE
5000
// Uses(syn,IDENT)
stmt s; constant const; variable v;
Select BOOLEAN such that Uses(const,"4")
FALSE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(s,v)
TRUE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(pr,v)
TRUE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(a,v)
TRUE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(w,v)
TRUE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(ifs,v)
FALSE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(c,v)
TRUE
5000
// Uses(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(p,v)
TRUE
5000
// Uses(syn,v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(const,v)
FALSE
5000
//Uses(proc,_)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses(p,_)
TRUE
5000
// Uses(proc, v)
procedure p, q; variable v;
Select BOOLEAN such that Uses(p,v)
TRUE
5000
// Uses(proc, ident)
procedure p;
Select BOOLEAN such that Uses(p,"b")
TRUE
5000
// Uses(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses("A","b")
TRUE
5000
// Uses(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses("A","x")
TRUE
5000
// Uses(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses("A","A")
TRUE
5000
// Uses(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses("B","j")
FALSE
5000
// Uses(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Uses("A","B")
TRUE
5000
// Modifies(synonym, _)
stmt s;
Select BOOLEAN such that Modifies(s,_)
TRUE
5000
// Modifies(synonym, _)
print pr;
Select BOOLEAN such that Modifies(pr,_)
FALSE
5000
// Modifies(synonym, _)
assign a;
Select BOOLEAN such that Modifies(a,_)
TRUE
5000
// Modifies(synonym, _)
while w;
Select BOOLEAN such that Modifies(w,_)
TRUE
5000
// Modifies(synonym, _)
if ifs;
Select BOOLEAN such that Modifies(ifs,_)
FALSE
5000
// Modifies(synonym, _)
call c;
Select BOOLEAN such that Modifies(c,_)
TRUE
5000
// Modifies(synonym, _)
procedure p;
Select BOOLEAN such that Modifies(p,_)
TRUE
5000
// Modifies(syn,_)
constant const;
Select BOOLEAN such that Modifies(const,_)
FALSE
5000
// Modifies(synonym, v)
stmt s; variable v;
Select BOOLEAN such that Modifies(s,v)
TRUE
5000
// Modifies(synonym, v)
print pr; variable v;
Select BOOLEAN such that Modifies(pr,v)
FALSE
5000
// Modifies(synonym, v)
assign a; variable v;
Select BOOLEAN such that Modifies(a,v)
TRUE
5000
// Modifies(synonym, v)
while w; variable v;
Select BOOLEAN such that Modifies(w,v)
TRUE
5000
// Modifies(synonym, v)
if ifs; variable v;
Select BOOLEAN such that Modifies(ifs,v)
FALSE
5000
// Modifies(synonym, v)
call c; variable v;
Select BOOLEAN such that Modifies(c,v)
TRUE
5000
// Modifies(synonym, v)
procedure p; variable v;
Select BOOLEAN such that Modifies(p,v)
TRUE
5000
// Modifies(syn,v)
constant const; variable v;
Select BOOLEAN such that Modifies(const,v)
FALSE
5000
// Modifies (stmtNo,_)
call c; assign a;
Select BOOLEAN such that Modifies(5,_)
TRUE
5000
// Modifies (stmtNo,_)
stmt s; assign a;
Select BOOLEAN such that Modifies(7,_)
TRUE
5000
// Modifies (stmtNo,_)
print pr; assign a;
Select BOOLEAN such that Modifies(10,_)
FALSE
5000
// Modifies (stmtNo,_)
constant c; assign a;
Select BOOLEAN such that Modifies(20,_)
FALSE
5000
// Modifies (stmtNo,_)
stmt s; assign a;
Select BOOLEAN such that Modifies(999,_)
FALSE
5000
// Modifies (stmtNo,syn)
constant c; assign a; variable v;
Select BOOLEAN such that Modifies(5,v)
TRUE
5000
// Modifies (stmtNo,syn)
stmt s; assign a; variable v;
Select BOOLEAN such that Modifies(8,v)
TRUE
5000
// Modifies (stmtNo,syn)
print pr; assign a; variable v;
Select BOOLEAN such that Modifies(10,v)
FALSE
5000
// Modifies (stmtNo,syn)
print pr; assign a; variable v;
Select BOOLEAN such that Modifies(999,v)
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; variable v;
Select BOOLEAN such that Modifies(s,"b")
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; print pr; variable v;
Select BOOLEAN such that Modifies(pr,"A")
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; assign a; variable v;
Select BOOLEAN such that Modifies(a,"b")
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; while w; variable v;
Select BOOLEAN such that Modifies(w,"x")
TRUE
5000
// Modifies(synonym, IDENT)
stmt s; if ifs; variable v;
Select BOOLEAN such that Modifies(ifs,"a")
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; call c; variable v;
Select BOOLEAN such that Modifies(c,"B")
FALSE
5000
// Modifies(synonym, IDENT)
stmt s; procedure p; variable v;
Select BOOLEAN such that Modifies(p,"x")
TRUE
5000
// Modifies(syn,IDENT)
stmt s; constant const; variable v;
Select BOOLEAN such that Modifies(const,"4")
FALSE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(s,v)
TRUE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(pr,v)
FALSE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(a,v)
TRUE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(w,v)
TRUE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(ifs,v)
FALSE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(c,v)
TRUE
5000
// Modifies(synonym, v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(p,v)
TRUE
5000
// Modifies(syn,v)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(const,v)
FALSE
5000
//Modifies(proc,_)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies(p,_)
TRUE
5000
// Modifies(proc, v)
procedure p, q; variable v;
Select BOOLEAN such that Modifies(p,v)
TRUE
5000
// Modifies(proc, ident)
procedure p;
Select BOOLEAN such that Modifies(p,"b")
FALSE
5000
// Modifies(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies("A","b")
FALSE
5000
// Modifies(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies("A","x")
TRUE
5000
// Modifies(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies("A","A")
FALSE
5000
// Modifies(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies("B","j")
FALSE
5000
// Modifies(proc_name, ident)
stmt s; variable v; assign a; call c; print pr; procedure p; while w; if ifs; constant const;
Select BOOLEAN such that Modifies("A","B")
FALSE
5000
1 - Select synonym, calls wildcard wildcard
stmt s;
Select BOOLEAN such that Calls(_, _)
TRUE
5000
2 - Select synonym, calls wildcard synonym
assign a; procedure p;
Select BOOLEAN such that Calls(_, p)
TRUE
5000
2 - Select boolean, calls wildcard, entref
stmt s;
Select BOOLEAN such that Calls(_, "procedure")
FALSE
5000
3 -  Select synonym, calls wildcard entref
print p;
Select BOOLEAN such that Calls(_, "e")
FALSE
5000
5 - Select synonym, calls synonym, wildcard
constant const; procedure p;
Select BOOLEAN such that Calls(p, _)
TRUE
5000
6 - Select synonym, calls synonym, synonym
while w; procedure p1, p2;
Select BOOLEAN such that Calls(p1, p2)
TRUE
5000
7 - Select synonym, calls synonym, entref
if ifs; procedure p;
Select BOOLEAN such that Calls(p, "b")
FALSE
5000
8 - Select synonym, calls synonym, synonym
stmt s; procedure p;
Select BOOLEAN such that Calls(p, p)
FALSE
5000
9 - Select synonym, calls, synonym, entref
if ifs; procedure p;
Select BOOLEAN  such that Calls(p, "_")
FALSE
5000
10 - select syn, calls entref, wildcard
call c;
Select BOOLEAN such that Calls("b", _)
FALSE
5000
11 - select syn, calls entref, syn
constant const; procedure p;
Select BOOLEAN such that Calls("procName", p)
FALSE
5000
12 - select syn, calls entref, entref
procedure p;
Select BOOLEAN  such that Calls("A", "B")
TRUE
5000
13 - select syn, calls entref, wildcard
call c;
Select BOOLEAN  such that Calls("C", _)
FALSE
5000
14 - select syn, calls entref, wildcard
call c;
Select BOOLEAN such that Calls("procedure", _)
FALSE
5000
15 -select syn, calls entref, syn
constant const; procedure p;
Select BOOLEAN such that Calls("proc", p)
FALSE
5000
16 - select syn, calls entref, syn
constant const; procedure p;
Select BOOLEAN such that Calls("B", p)
TRUE
5000
17 - select syn, calls entref, entref
procedure p;
Select BOOLEAN  such that Calls("a", "a")
FALSE
5000
18 - select syn, calls entref, entref
procedure p;
Select BOOLEAN  such that Calls("b", "d")
FALSE
5000
23 - select syn, calls entref, syn
procedure p;
Select BOOLEAN  such that Calls("a", p)
FALSE
5000
24 -  select syn, calls entref, syn
procedure p;
Select BOOLEAN such that Calls("BOOLEAN", p)
FALSE
5000
25 - select syn, calls entref, syn
procedure p;
Select BOOLEAN such that Calls("d", p)
FALSE
5000
26 - select syn, calls wildcard wildcard
stmt s;
Select BOOLEAN such that Calls*(_,_)
TRUE
5000
27 - select syn, calls wildcard, syn
assign a; procedure p;
Select BOOLEAN such that Calls*(_,p)
TRUE
5000
28 - select boolean, calls wildcard, enref
stmt s;
Select BOOLEAN such that Calls*(_, "procedure")
FALSE
5000
29 - select syn calls wildcard, entref
read r;
Select BOOLEAN such that Calls*(_, "e")
FALSE
5000
30 - select bool calls syn, wildcard
procedure p;
Select BOOLEAN such that Calls*(p, _)
TRUE
5000
31 - select syn calls syn syn
while w; procedure p1, p2;
Select BOOLEAN such that Calls*(p1, p2)
TRUE
5000
32 - select syn, calls syn, entref
if ifs; procedure p;
Select BOOLEAN such that Calls*(p, "b")
FALSE
5000
33 - select syn calls syn syn
stmt s; procedure p;
Select BOOLEAN such that Calls*(p, p)
FALSE
5000
34 - select syn calls entref wildcard
call c;
Select BOOLEAN such that Calls*("b", _)
FALSE
5000
36 - select syn calls entref entref
procedure p;
Select BOOLEAN such that Calls*("a", "procedure")
FALSE
5000
37 - select syn calls entref wildcard
call c;
Select BOOLEAN such that Calls*("C", _)
FALSE
5000
38 - select syn calls wildcard, syn
procedure p;
Select BOOLEAN such that Calls*(_, p)
TRUE
5000
39 - select syn calls wildcard, syn
procedure p;
Select BOOLEAN such that Calls*(p, _)
TRUE
5000
42 - select syn calls entref syn
procedure p;
Select BOOLEAN such that Calls*("a", p)
FALSE
5000
// Select synonym, next wildcard wildcard
stmt s1, s2;
Select BOOLEAN such that Next(_,_)
TRUE
5000
// Select synonym, next wildcard synonym
stmt s1, s2;
Select BOOLEAN such that Next(_,s1)
TRUE
5000
// Select synonym, next synonym wildcard
stmt s1, s2;
Select BOOLEAN such that Next(s1,_)
TRUE
5000
// Select synonym, next wildcard stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(_,2)
TRUE
5000
// Select synonym, next wildcard missing stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(_,999)
FALSE
5000
// Select synonym, next stmtNum wildcard
stmt s1, s2;
Select BOOLEAN such that Next(1,_)
TRUE
5000
// Select synonym, next missing stmtNum wildcard
stmt s1, s2;
Select BOOLEAN such that Next(999,_)
FALSE
5000
// Select synonym, next synonym stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(s1,43)
FALSE
5000
// Select synonym, next synonym stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(s1,14)
TRUE
5000
// Select synonym, next synonym stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(s1,5)
TRUE
5000
// Select synonym, next synonym stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(s1,8)
FALSE
5000
// Select synonym, next synonym stmtNum
print pr;
Select BOOLEAN such that Next(pr,11)
TRUE
5000
// Select synonym, next synonym stmtNum
read re;
Select BOOLEAN such that Next(re,8)
FALSE
5000
// Select synonym, next synonym stmtNum
read re;
Select BOOLEAN such that Next(re,25)
FALSE
5000
// Select synonym, next synonym stmtNum
call c;
Select BOOLEAN such that Next(c,8)
FALSE
5000
// Select synonym, next synonym stmtNum
while w;
Select BOOLEAN such that Next(w,3)
TRUE
5000
// Select synonym, next synonym stmtNum
stmt s1; constant const;
Select BOOLEAN such that Next(s1,4)
TRUE
5000
// Select synonym, next synonym stmtNum
stmt s1; constant const;
Select BOOLEAN such that Next(s1,13)
TRUE
5000
// Select synonym, next stmtNum synonym
stmt s1, s2;
Select BOOLEAN such that Next(12,s1)
TRUE
5000
// Select synonym, next stmtNum synonym
print pr;
Select BOOLEAN such that Next(10,pr)
FALSE
5000
// Select synonym, next stmtNum synonym
read re;
Select BOOLEAN such that Next(6,re)
TRUE
5000
// Select synonym, next stmtNum synonym
assign a; if ifs;
Select BOOLEAN such that Next(38,ifs)
FALSE
5000
// Select synonym, next stmtNum synonym
call c;
Select BOOLEAN such that Next(5,c)
FALSE
5000
// Select synonym, next stmtNum synonym
while w;
Select BOOLEAN such that Next(2,w)
FALSE
5000
// Select synonym, next stmtNum synonym
stmt s1; constant const;
Select BOOLEAN such that Next(14,s1)
FALSE
5000
// Select synonym, next stmtNum stmtNum (if, else)
stmt s1, s2;
Select BOOLEAN such that Next(2,3)
TRUE
5000
// Select synonym, next missing stmtNum undeclared synonym
stmt s1, s2;
Select BOOLEAN such that Next(999,s3)
FALSE
5000
// Select synonym, next undeclared synonym missing stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(s3,999)
FALSE
5000
// Select synonym, next missing stmtNum missing stmtNum
stmt s1, s2;
Select BOOLEAN such that Next(999,999)
FALSE
5000
// Select synonym, next synonym synonym
stmt s1, s2;
Select BOOLEAN such that Next(s1,s2)
TRUE
5000
// Select synonym, next undeclared synonym synonym
stmt s1, s2;
Select BOOLEAN such that Next(s3,s1)
FALSE
5000
// Select synonym, next synonym undeclared synonym
stmt s1, s2;
Select BOOLEAN such that Next(s1,s3)
FALSE
5000
// Select synonym, next synonym synonym
stmt s1, s2;
Select BOOLEAN such that Next(s1,s2)
TRUE
5000
// Select synonym, next synonym synonym
if ifs; call c;
Select BOOLEAN such that Next(ifs,c)
FALSE
5000
// Select synonym, next synonym synonym
stmt s; assign a; print pr; read re; if ifs; while w; constant const; call c;
Select BOOLEAN such that Next(a, pr)
TRUE
5000
// Select synonym, next synonym synonym
if ifs; call c;
Select BOOLEAN such that Next(ifs, c)
FALSE
5000
// Select synonym, next synonym synonym
read re; while w;
Select BOOLEAN such that Next(w, re)
FALSE
5000
// Select synonym, next synonym synonym
print pr; read re;
Select BOOLEAN such that Next(pr, re)
FALSE
5000
// Select synonym, next synonym synonym
assign a; call c;
Select BOOLEAN such that Next(c, a)
FALSE
5000
// Select synonym, next synonym synonym
read re; if ifs;
Select BOOLEAN such that Next(re, ifs)
FALSE
5000
// Select synonym, next synonym synonym
assign a; if ifs;
Select BOOLEAN such that Next(a, ifs)
FALSE
5000
// Select synonym, next synonym synonym
if ifs; while w; constant cons;
Select BOOLEAN such that Next(ifs, w)
FALSE
5000
// Select synonym, next synonym synonym
stmt s; print pr;
Select BOOLEAN such that Next(s, pr)
TRUE
5000
// Select synonym, next synonym synonym
call c1, c2;
Select BOOLEAN such that Next(c1, c2)
FALSE
5000
//Select a pattern a(_, _)
assign a, a1;
Select BOOLEAN pattern a(_,_)
TRUE
5000
//Select a pattern a("...", _)
assign a, a1;
Select BOOLEAN pattern a("z", _)
TRUE
5000
//Select a pattern a(_, "...")
assign a, a1;
Select BOOLEAN pattern a(_, "a * b / ( c - a ) / b / c - z")
TRUE
5000
//Select a pattern a(_, _"..."_ )
assign a, a1;
Select BOOLEAN pattern a(_, _"b"_)
TRUE
5000
//Select a pattern a(_, _"..."_ )
assign a, a1;
Select BOOLEAN pattern a(_, _"b / c"_)
FALSE
5000
//Select w pattern w(_,_)
while w;
Select BOOLEAN pattern w(_,_)
TRUE
5000
//Select w pattern w("...", _)
while w;
Select BOOLEAN pattern w("x",_)
TRUE
5000
//Select w pattern w(v, _)
while w; variable v;
Select BOOLEAN pattern w(v,_)
TRUE
5000
//Select w pattern w(_, "...")
while w;
Select BOOLEAN pattern w(_, "42")
FALSE
5000
//Select ifs pattern ifs(_,_,_)
if ifs;
Select BOOLEAN pattern ifs(_,_,_)
FALSE
5000
//Select ifs pattern ifs("...",_,_)
if ifs;
Select BOOLEAN pattern ifs("y",_,_)
FALSE
5000
//Select ifs pattern ifs(v,_,_)
if ifs;
Select BOOLEAN pattern ifs(v,_,_)
FALSE
5000
//Select ifs pattern ifs(_, "...",_)
if ifs;
Select BOOLEAN pattern ifs(_,"b",_)
none
5000
//Select ifs pattern ifs("...", "...", _)
if ifs;
Select BOOLEAN pattern ifs("y", "x", _)
none
5000
