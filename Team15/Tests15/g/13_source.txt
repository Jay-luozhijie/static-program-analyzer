procedure first {
	a = 2 + 2;
	read a;
	call second;
	while(a1 == b1) {
		n = q;
	}
	while((!(zebra > a)) || ((horse >= 1) && (m % 24134 < p))) {
		c = o;
	}
	if((left != 0) && (right != 0)) then {
		left = right;
	} else {
		if((ads % 2 == 3) && ((fa8 <= 23) || (89 != fa9fa))) then {
			b = a;
 		} else {
			print  ai;
		}
		a = b;
	}
	a = b + (c - d);
	a = (b + c - (abc %d)) / e;
	a = (b + c*(b -q / (abc % d))) / e %a;
}

procedure second {
	read cow;
	if(cow == 0) then {
		cow = 1234;
		if(child != parent) then {
			call fourth;
			read child;
		} else {
			call fifth;
			print parent;
		}
	} else {
		cow = cat / 2;
		while(cat == cow) {
			cat = 10;
			call fourth;
			if(horse == (chicken + donkey + moose)) then {
				while( horse == chicken + 322 ) {
					call fifth;
					while (donkey != 0){
						print donkey;
					}
				}
			} else {
				print donkey;
			}
		}
		donkey = moose / 2;
	}
	call third;
}

procedure fifth {
	print word;
}

procedure third {
	if( y != 0 ) then {
		if (y != 1) then {
			while ( x != 1) {
				z = x + y;
				x = y - z;
			}
		} else {
			z = 0;
		}
		while (x !=1) {
			y = 1;
		}
		x = x + 1;
	} else {
		while (x != 9) {
			x = x-1;
			while (y != 0) {
				y = y - 1;
			}
		}
		k = 1;
	}
	leo = y - x;
	print leo;
}

procedure fourth {
	while (trip==44){
		trip = power;
		call fifth;
	}
	print snail;
	a = b / c + snail;
	a = b / c % d - e + f;
}

procedure square {
	read code;
	if (length == breadth) then {
		length = 0;
	} else {
		length = 1;
		if(length == height) then {
			length = 2;
		} else {
			if(length == 44) then {
				height = 3;
			} else {
				height = 5;
			}
			length = 3;
		}
	}
	print breadth;
}

procedure extra {
	derp = 1337;
}
